apiVersion: v1
kind: Namespace
metadata:
  name: prod
  
--
apiVersion: v1
kind: ConfigMap
metadata:
  name: service-a-cm
  namespace: prod
data:
  SERVER_PORT: '8080'
  SPRING_PROFILES_ACTIVE: dev
  TZ: 'Europe/Madrid'
  TRACES_ENDPOINT: 'http://jaeger-collector.istio-system.svc.cluster.local:9411'
  SERVICE_B_PEDIDO_URL: 'http://service-b-svc/service-b/api/pedido'
  SERVICE_B_USER_URL: 'http://service-b-svc/service-b/user/1'
  SERVICE_B_USERS_URL: 'http://service-b-svc/service-b/user/users'
  SERVICE_K1_PEDIDO_URL: 'http://service-k1-svc/service-k1/api/pedido'
  SERVICE_K1_USER_TOPIC_CREATE_URL: 'http://service-k1-svc/service-k1/user/create'
  SERVICE_K1_TRAMIT_TOPIC_CREATE_URL: 'http://service-k1-svc/service-k1/tramit/create'
  
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: service-a-deploy
  namespace: prod
  labels:
    app: service-a
    k8s-app: service-a
    version: v1
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: service-a
      k8s-app: service-a
      version: v1
  template:
    metadata:
      labels:
        app: service-a
        k8s-app: service-a
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/service-a/actuator/prometheus"
        prometheus.io/port: "8080"
        prometheus.io/scheme: "http"
        sidecar.istio.io/inject: "true"
    spec:
      containers:
      - name: service-a
        image: docker.io/gines/service-a:1.0.0
        imagePullPolicy: Always
        envFrom:
        - configMapRef:
            name: service-a-cm
        ports:
        - containerPort: 8080
          name: http-port
        readinessProbe:
          tcpSocket:
            port: 8080
          periodSeconds: 30
          initialDelaySeconds: 50
          timeoutSeconds: 5
        livenessProbe:
          httpGet:
            path: /service-a/actuator/health
            port: 8080
          periodSeconds: 30
          initialDelaySeconds: 60
          timeoutSeconds: 5
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30

---
apiVersion: v1
kind: Service
metadata:
  name: service-a-svc
  namespace: prod  
  labels:
    app: service-a
    k8s-app: service-a
    version: v1
spec:
  ports:
  - port: 80
    targetPort: 8080
    name: http-port
    protocol: TCP
  selector:
    app: service-a
    k8s-app: service-a
    version: v1
